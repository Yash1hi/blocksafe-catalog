
import { Link } from "react-router-dom";
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { SeverityBadge } from "@/components/SeverityBadge";
import { Vulnerability } from "@/lib/data";
import { Calendar, ExternalLink } from "lucide-react";

interface VulnerabilityCardProps {
  vulnerability: Vulnerability;
}

export function VulnerabilityCard({ vulnerability }: VulnerabilityCardProps) {
  const {
    id,
    name,
    description,
    severity,
    blockchains,
    discoveryDate,
    auditor,
    status
  } = vulnerability;

  const truncatedDescription = 
    description.length > 120 
      ? `${description.substring(0, 120)}...` 
      : description;

  const statusColors = {
    active: "text-blocksafe-danger",
    patched: "text-blocksafe-success",
    mitigated: "text-blocksafe-warning"
  };

  return (
    <Card className="overflow-hidden transition-all hover:shadow-md hover:border-blocksafe-teal/50">
      <CardHeader className="p-4 pb-2">
        <div className="flex items-start justify-between">
          <div className="flex flex-col">
            <CardTitle className="text-base font-medium mb-1">
              <Link 
                to={`/vulnerability/${id}`} 
                className="hover:text-blocksafe-teal transition-colors"
              >
                {name}
              </Link>
            </CardTitle>
            <div className="flex items-center text-xs text-muted-foreground space-x-2">
              <span className={statusColors[status]}>
                {status.charAt(0).toUpperCase() + status.slice(1)}
              </span>
              <span>â€¢</span>
              <span>{id}</span>
            </div>
          </div>
          <SeverityBadge severity={severity} />
        </div>
      </CardHeader>
      <CardContent className="p-4 pt-2 pb-2">
        <p className="text-sm text-muted-foreground">{truncatedDescription}</p>
        <div className="flex flex-wrap gap-1 mt-3">
          {blockchains.map((chain) => (
            <Badge 
              key={chain} 
              variant="secondary" 
              className="text-xs font-normal py-0 h-5"
            >
              {chain}
            </Badge>
          ))}
        </div>
      </CardContent>
      <CardFooter className="p-4 pt-2 border-t border-border/40 flex justify-between text-xs text-muted-foreground">
        <div className="flex items-center gap-1">
          <Calendar className="h-3 w-3" />
          <span>{discoveryDate}</span>
        </div>
        <div className="flex items-center gap-1">
          Found by: <span className="text-blocksafe-teal">{auditor}</span>
        </div>
      </CardFooter>
    </Card>
  );
}
