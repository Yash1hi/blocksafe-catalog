
import { Shield, Calendar, User, Link, FileCode, AlertTriangle, ExternalLink } from "lucide-react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { SeverityBadge } from "@/components/SeverityBadge";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { Button } from "@/components/ui/button";
import { Vulnerability } from "@/lib/data";

interface VulnerabilityDetailProps {
  vulnerability: Vulnerability;
}

export function VulnerabilityDetail({ vulnerability }: VulnerabilityDetailProps) {
  const {
    id,
    name,
    description,
    severity,
    blockchains,
    discoveryDate,
    auditor,
    attackVectors,
    status,
    references,
    impact,
    exploitCode,
    mitigation,
  } = vulnerability;

  const statusColors = {
    active: "bg-red-900/30 text-blocksafe-danger border border-blocksafe-danger",
    patched: "bg-green-900/20 text-blocksafe-success border border-blocksafe-success/50",
    mitigated: "bg-yellow-900/20 text-blocksafe-warning border border-blocksafe-warning/50"
  };

  return (
    <div className="space-y-6">
      <div className="flex flex-col gap-2">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-2">
            <Shield className="h-6 w-6 text-blocksafe-teal" />
            <h1 className="text-2xl font-bold">{name}</h1>
          </div>
          <SeverityBadge severity={severity} className="px-3 py-1 text-sm" />
        </div>
        
        <div className="flex items-center gap-2 text-sm text-muted-foreground">
          <Badge 
            className={statusColors[status]} 
            variant="outline"
          >
            {status.charAt(0).toUpperCase() + status.slice(1)}
          </Badge>
          <span className="text-muted-foreground">ID: {id}</span>
        </div>
      </div>

      <Card>
        <CardHeader>
          <CardTitle className="text-lg font-medium">Overview</CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div>
            <p className="text-sm leading-relaxed">{description}</p>
          </div>
          
          <div className="pt-2 grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="flex items-start gap-2">
              <Calendar className="h-5 w-5 text-blocksafe-teal mt-0.5" />
              <div>
                <p className="text-sm font-medium">Discovery Date</p>
                <p className="text-sm text-muted-foreground">{discoveryDate}</p>
              </div>
            </div>
            
            <div className="flex items-start gap-2">
              <User className="h-5 w-5 text-blocksafe-teal mt-0.5" />
              <div>
                <p className="text-sm font-medium">Discovered By</p>
                <p className="text-sm text-muted-foreground">{auditor}</p>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <Card>
          <CardHeader>
            <CardTitle className="text-lg font-medium">Technical Details</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <h3 className="text-sm font-medium mb-2">Affected Blockchains</h3>
              <div className="flex flex-wrap gap-2">
                {blockchains.map((chain) => (
                  <Badge key={chain} variant="secondary">{chain}</Badge>
                ))}
              </div>
            </div>
            
            <div>
              <h3 className="text-sm font-medium mb-2">Attack Vectors</h3>
              <div className="flex flex-wrap gap-2">
                {attackVectors.map((vector) => (
                  <Badge key={vector} variant="outline">{vector}</Badge>
                ))}
              </div>
            </div>
            
            <div>
              <h3 className="text-sm font-medium mb-2">Impact</h3>
              <p className="text-sm text-muted-foreground">{impact}</p>
            </div>
          </CardContent>
        </Card>
        
        <Card>
          <CardHeader>
            <CardTitle className="text-lg font-medium">Mitigation</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            {mitigation ? (
              <div>
                <p className="text-sm text-muted-foreground">{mitigation}</p>
              </div>
            ) : (
              <div className="flex items-center justify-center h-20 bg-muted/20 rounded-md">
                <p className="text-sm text-muted-foreground">No mitigation information available</p>
              </div>
            )}
            
            {references && references.length > 0 && (
              <div>
                <h3 className="text-sm font-medium mb-2">References</h3>
                <ul className="space-y-2">
                  {references.map((reference, index) => (
                    <li key={index} className="text-sm">
                      <a 
                        href={reference} 
                        target="_blank" 
                        rel="noopener noreferrer"
                        className="text-blocksafe-teal hover:underline flex items-center gap-1"
                      >
                        <ExternalLink className="h-3 w-3" />
                        {reference.length > 40 ? `${reference.substring(0, 40)}...` : reference}
                      </a>
                    </li>
                  ))}
                </ul>
              </div>
            )}
          </CardContent>
        </Card>
      </div>

      {exploitCode && (
        <Card>
          <CardHeader>
            <CardTitle className="text-lg font-medium">Exploit Code Example</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="bg-blocksafe-dark p-4 rounded-md overflow-x-auto">
              <pre className="text-sm text-blocksafe-teal whitespace-pre-wrap">
                <code>{exploitCode}</code>
              </pre>
            </div>
            <div className="mt-4 flex justify-center">
              <p className="text-xs text-blocksafe-danger flex items-center">
                <AlertTriangle className="h-3 w-3 mr-1" />
                Warning: For educational purposes only. Do not use for malicious activities.
              </p>
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  );
}
